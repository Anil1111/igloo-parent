<?xml version="1.0" encoding="UTF-8"?>
<!--
	- Root application context
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

	<!-- SCAN DES PACKAGES -->
	<context:component-scan base-package="fr.openwide.hibernate" />

	<!-- INJECTION PAR ANNOTATION -->
	<context:annotation-config />
	
	<!-- CONFIGURATION -->
	<bean id="configurer" class="fr.openwide.hibernate.util.spring.OwsiHibernateConfigurer">
		<property name="locations">
			<list>
				<value>classpath:owsi-hibernate.properties</value>
			</list>
		</property>
		<property name="ignoreResourceNotFound" value="true" />
    </bean>

	<!-- DB CONNEXION -->
	<!--
	2 datasources are needed because HibernateTransactionManager and
	DataSourceTransactionManager each bind connection resource on the thread with
	the datasource object as key. So if the transactions overlap, the transaction
	manager complains that value is already registered for given datasource
	-->
	<bean id="owsi-hibernate.datasource.hibernate"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		p:driverClass="${hibernate.db.driverClass}" p:jdbcUrl="${hibernate.db.jdbcUrl}"
		p:user="${hibernate.db.user}" p:password="${hibernate.db.password}"
		p:initialPoolSize="${hibernate.db.initialPoolSize}" p:minPoolSize="${hibernate.db.minPoolSize}"
		p:maxPoolSize="${hibernate.db.maxPoolSize}"
		p:preferredTestQuery="SELECT 1"
		p:testConnectionOnCheckin="true"
		p:idleConnectionTestPeriod="300"
		destroy-method="close" />
	
	<bean id="sessionFactory" 
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="owsi-hibernate.datasource.hibernate" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.db.dialect}</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.use_structured_entries">true</prop> 
				<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path">/ehcache-wombat.xml</prop>
				<prop key="net.sf.ehcache.configurationResourceName">/ehcache-wombat.xml</prop>
				<prop key="hibernate.generate_statistics">true</prop>
				<prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>
				<prop key="hibernate.search.default.directory_provider">org.hibernate.search.store.FSDirectoryProvider</prop>
				<!--<prop key="hibernate.search.default.indexBase">${lucene.index.path}</prop>-->
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>fr.openwide.hibernate.*.business.*.model</value>
			</list>
		</property>
		<!-- <property name="eventListeners">
			<map>
				<entry key="post-insert">
					<set>
						<ref bean="fullTextIndexEventListener" />
					</set>
				</entry>
				<entry key="post-update">
					<set>
						<ref bean="fullTextIndexEventListener" />
					</set>
				</entry>
				<entry key="post-delete">
					<set>
						<ref bean="fullTextIndexEventListener" />
					</set>
				</entry>
			</map>
		</property>-->
	</bean>
	
	<!--<bean id="fullTextIndexEventListener" class="org.hibernate.search.event.FullTextIndexEventListener" />-->

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />
	 
	<aop:config>
		<aop:pointcut id="txPointCutDef" expression="execution(* fr.openwide.hibernate..business..service.*ServiceImpl.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCutDef"  />
	</aop:config>

	<!--  Inutile ?
	<tx:advice id="txProcessAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" read-only="false" propagation="REQUIRES_NEW" />
		</tx:attributes>
	</tx:advice>
	-->

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="list*" read-only="true" />
			<tx:method name="search*" read-only="true" />
			<tx:method name="*" read-only="false" rollback-for="fr.openwide.hibernate.exception.SecurityServiceException" />
		</tx:attributes>
	</tx:advice>
	
	<!--<bean id="taskFactory"
		class="org.springframework.beans.factory.config.ServiceLocatorFactoryBean"
		p:serviceLocatorInterface="fr.openwide.wombat.core.business.process.factory.TaskFactory" />-->
   
</beans>